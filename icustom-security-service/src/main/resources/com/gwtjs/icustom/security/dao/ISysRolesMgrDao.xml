<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gwtjs.icustom.security.dao.ISysRolesMgrDao">
	
	<cache eviction="LRU" flushInterval="60000" size="1024" readOnly="false" />
	<!-- eviction是缓存的淘汰算法，可选值有"LRU"、"FIFO"、"SOFT"、"WEAK"，缺省值是LRU flashInterval指缓存过期时间，单位为毫秒，60000即为60秒，缺省值为空，即只要容量足够，永不过期 
		size指缓存多少个对象，默认值为1024 readOnly是否只读，如果为true，则所有相同的sql语句返回的是同一个对象（有助于提高性能，但并发操作同一条数据时，可能不安全），如果设置为false，则相同的sql，后面访问的是cache的clone副本。 -->
	
	
	<select id="findByItem" resultType="com.gwtjs.icustom.security.entity.SysRoleVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_ROLE_T T1 
		where T1.VALID_FLAG=1 
			AND T1.ROLE_NAME = #{roleName,jdbcType=VARCHAR}
	</select>
	
	<select id="findItem" resultType="com.gwtjs.icustom.security.entity.SysRoleVO">
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_ROLE_T T1 
		where T1.VALID_FLAG=1 AND T1.ROLE_ID = #{id,jdbcType=NUMERIC}
	</select>
	
	<sql id="Base_Column_List">
		ROLE_ID 		 id,
		ROLE_NAME        roleName, 
		ROLE_CODE        roleCode,    
		REMARK        	remark,
		ATTRIBUTE1       attribute1,                                
		ATTRIBUTE2       attribute2,                                
		ATTRIBUTE3       attribute3,                                
		ATTRIBUTE4       attribute4,                                
		ATTRIBUTE5       attribute5,                                
		ATTRIBUTE6       attribute6,                                
		ATTRIBUTE7       attribute7,                                
		ATTRIBUTE8       attribute8,                                
		ATTRIBUTE9       attribute9,                                
		ATTRIBUTE10      attribute10,  
		ORDER_CODE 		 orderCode,
		VALID_FLAG       validFlag,
		CREATED_USER 	 createdUser,
		CREATED_DATE 	 createdDate,
		UPDATE_LAST_USER updateLastUser,
		UPDATE_LAST_DATE updateLastDate
	</sql>

	<sql id="page_st">
		SELECT * FROM (
		SELECT TT.* , ROWNUM RN FROM (
	</sql>
	<sql id="page_et">
		) TT WHERE<![CDATA[ rownum<=#{page.endIndex} ) WHERE rn>=#{page.startIndex} ]]>
	</sql>
	
	<select id="findSysRoles" parameterType="hashmap"
		resultType="com.gwtjs.icustom.security.entity.SysRoleVO">
		<include refid="page_st" />
		SELECT
		<include refid="Base_Column_List" />
		FROM SYS_ROLE_T T1
		where T1.VALID_FLAG=1
		<include refid="select_cond" />
		ORDER BY ROLE_ID DESC 
		<!-- <if test="#{page.order != null}"> order by #{page.order} asc </if> -->
		<include refid="page_et" />
	</select>

	<select id="findSysRolesCount" resultType="INTEGER">
		SELECT
		COUNT(1)
		FROM SYS_ROLE_T T1
		where T1.VALID_FLAG=1
		<include refid="select_cond" />
	</select>

	<sql id="select_cond">
		<if test='_parameter.get("vo").roleName != null'>
			AND T1.ROLE_NAME LIKE ('%'||#{vo.roleName,jdbcType=VARCHAR}||'%')
		</if>
		<if test='_parameter.get("vo").roleCode != null'>
			AND upper(T1.ROLE_CODE) LIKE ('%'||upper(#{vo.roleCode,jdbcType=VARCHAR})||'%')
		</if>
		<if test='_parameter.get("vo").remark != null'>
			AND T1.remark LIKE ('%'||#{vo.remark,jdbcType=VARCHAR}||'%')
		</if>
		<if test='_parameter.get("vo").createdDate != null'>
			AND T1.CREATED_DATE <![CDATA[>=]]> TO_DATE(#{vo.createdDate,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
		</if>
		<if test='_parameter.get("vo").createdDate != null'>
			AND T1.CREATED_DATE <![CDATA[<=]]> TO_DATE(#{vo.createdDate,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
		</if>

	</sql>

	<!-- batch action -->

	<delete id="batchRemovePks" parameterType="java.util.List">
		DELETE FROM SYS_ROLE_T WHERE ROLE_ID in 
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item.id}
		</foreach>
	</delete>
	
	<!-- batchUpdate -->
	<update id="saveOrUpdate">
		begin
		<foreach collection='list' item="item" index="index">
			MERGE INTO SYS_ROLE_T tar 
			USING (
				SELECT
					#{item.id,jdbcType=NUMERIC} ROLE_ID,
					#{item.rolename,jdbcType=VARCHAR} ROLE_NAME,
					#{item.orderCode,jdbcType=INTEGER} ORDER_CODE,
					#{item.remark,jdbcType=VARCHAR} REMARK,
					#{item.roleCode,jdbcType=VARCHAR} ROLE_CODE,
					#{item.validFlag,jdbcType=INTEGER} VALID_FLAG,
					#{item.attribute1,jdbcType=VARCHAR} attribute1,
					#{item.attribute2,jdbcType=VARCHAR} attribute2,
					#{item.attribute3,jdbcType=VARCHAR} attribute3,
					#{item.attribute4,jdbcType=VARCHAR} attribute4,
					#{item.attribute5,jdbcType=VARCHAR} attribute5,
					#{item.attribute6,jdbcType=VARCHAR} attribute6,
					#{item.attribute7,jdbcType=VARCHAR} attribute7,
					#{item.attribute8,jdbcType=VARCHAR} attribute8,
					#{item.attribute9,jdbcType=VARCHAR} attribute9,
					#{item.attribute10,jdbcType=VARCHAR} attribute10,
					#{item.createdUser,jdbcType=NUMERIC} CREATED_USER,
					#{item.updateLastUser,jdbcType=NUMERIC} UPDATE_LAST_USER
				FROM dual
			) src
			on (
				tar.ROLE_ID=src.ROLE_ID
				OR tar.ROLE_NAME = src.ROLE_NAME
			)
			WHEN MATCHED THEN
			UPDATE SET 
				tar.REMARK = src.REMARK,
				tar.ROLE_CODE = src.ROLE_CODE,
				tar.ORDER_CODE = src.ORDER_CODE,
				tar.attribute1 = src.attribute1,
				tar.attribute2 = src.attribute2,
				tar.attribute3 = src.attribute3,
				tar.attribute4 = src.attribute4,
				tar.attribute5 = src.attribute5,
				tar.attribute6 = src.attribute6,
				tar.attribute7 = src.attribute7,
				tar.attribute8 = src.attribute8,
				tar.attribute9 = src.attribute9,
				tar.attribute10 = src.attribute10,
				tar.UPDATE_LAST_DATE = SYSDATE,
				tar.UPDATE_LAST_USER = src.UPDATE_LAST_USER
			WHEN NOT MATCHED THEN
			INSERT
			(
				ROLE_ID ,
				ROLE_NAME ,
				ORDER_CODE ,
				CREATED_USER ,
				CREATED_DATE,
				UPDATE_LAST_USER ,
				UPDATE_LAST_DATE ,
				VALID_FLAG ,
				ATTRIBUTE1 ,
				ATTRIBUTE2 ,
				ATTRIBUTE3 ,
				ATTRIBUTE4 ,
				ATTRIBUTE5 ,
				ATTRIBUTE6 ,
				ATTRIBUTE7 ,
				ATTRIBUTE8 ,
				ATTRIBUTE9 ,
				ATTRIBUTE10 ,
				REMARK
				)
				values
				(
				SYS_ROLE_S.NEXTVAL ,
				src.ROLE_NAME ,
				src.ORDER_CODE ,
				src.CREATED_USER ,
				SYSDATE,
				src.UPDATE_LAST_USER ,
				SYSDATE ,
				src.VALID_FLAG ,
				src.ATTRIBUTE1 ,
				src.ATTRIBUTE2 ,
				src.ATTRIBUTE3 ,
				src.ATTRIBUTE4 ,
				src.ATTRIBUTE5 ,
				src.ATTRIBUTE6 ,
				src.ATTRIBUTE7 ,
				src.ATTRIBUTE8 ,
				src.ATTRIBUTE9 ,
				src.ATTRIBUTE10 ,
				src.REMARK
				);
		</foreach>
		null;
		END;
	</update>
	
</mapper>